/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.view;

import java.awt.Font;
import java.awt.FontFormatException;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JSlider;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author user
 */
public class background_music extends javax.swing.JFrame {
    private WAVPlayer player = new WAVPlayer();
    
    /**
     * Creates new form background_music
     */
    public background_music() {

        initComponents();
            
            volume_adj.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent e) {
                JSlider source = (JSlider) e.getSource();
                // Normalize the slider value to between 0 and 1
                float volume = source.getValue() / 100.0f;
                player.setVolume(volume);
            
            }
        });
    }
     
private boolean isButtonOn = false; // Variable to keep track of the toggle state

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgmusic_lbl = new javax.swing.JLabel();
        ToggleButton = new javax.swing.JToggleButton();
        bg = new javax.swing.JLabel();
        short_descrip2 = new javax.swing.JLabel();
        short_descrip1 = new javax.swing.JLabel();
        min = new javax.swing.JLabel();
        max = new javax.swing.JLabel();
        volume_adj = new javax.swing.JSlider();
        bgm_choices = new javax.swing.JComboBox<>();
        bgmusic_bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Background Music");
        setBackground(new java.awt.Color(255, 232, 198));
        setResizable(false);
        setSize(new java.awt.Dimension(400, 400));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bgmusic_lbl.setText("Background Music");
        getContentPane().add(bgmusic_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 190, 30));

        ToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/off_btn.png"))); // NOI18N
        ToggleButton.setBorder(null);
        ToggleButton.setBorderPainted(false);
        ToggleButton.setContentAreaFilled(false);
        ToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToggleButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ToggleButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, -1, -1));

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bgmusic_headerbg.png"))); // NOI18N
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        short_descrip2.setText("environment noise.");
        getContentPane().add(short_descrip2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 220, 30));

        short_descrip1.setText("Plays background sounds to mask unwanted");
        getContentPane().add(short_descrip1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 320, 60));

        min.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/min_music.png"))); // NOI18N
        getContentPane().add(min, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        max.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/max_music.png"))); // NOI18N
        getContentPane().add(max, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 190, -1, -1));

        volume_adj.setValue(100);
        getContentPane().add(volume_adj, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 250, -1));

        bgm_choices.setBackground(new java.awt.Color(140, 92, 52));
        bgm_choices.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bgm_choices.setForeground(new java.awt.Color(255, 255, 255));
        bgm_choices.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose one", "Rainfall", "Forest", "Air", "Bonfire", "Lato-Lato" }));
        bgm_choices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bgm_choicesActionPerformed(evt);
            }
        });
        getContentPane().add(bgm_choices, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 160, 50));

        bgmusic_bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bgm_bg.png"))); // NOI18N
        getContentPane().add(bgmusic_bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        try {
            Font fnbold = Font.createFont(Font.TRUETYPE_FONT, getClass().getResourceAsStream("/font/Poppins-Bold.ttf"));
            Font fnlight = Font.createFont(Font.TRUETYPE_FONT, getClass().getResourceAsStream("/font/Poppins-Light.ttf"));
            fnbold = fnbold.deriveFont(Font.PLAIN, 18);
            fnlight = fnlight.deriveFont(Font.PLAIN, 14);
            
            bgmusic_lbl.setFont(fnbold);
            short_descrip1.setFont(fnlight);
            short_descrip2.setFont(fnlight);
        } catch (FontFormatException | IOException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_formWindowOpened

    private void ToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ToggleButtonActionPerformed
    // Toggle the button icon
    if (isButtonOn) {
        ToggleButton.setIcon(new ImageIcon(getClass().getResource("/img/off_btn.png")));
        player.stop();
    } else {
        ToggleButton.setIcon(new ImageIcon(getClass().getResource("/img/on_btn.png")));
        playSelectedMusic();
    }
    
    // Update the toggle state
    isButtonOn = !isButtonOn;
   
    }//GEN-LAST:event_ToggleButtonActionPerformed

    private void bgm_choicesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bgm_choicesActionPerformed
    // TODO add your handling code here:
    String selectedMusic = (String) bgm_choices.getSelectedItem();
    if (!selectedMusic.equals("Choose one")) {
        // Stop the previous music before playing a new one
        player.stop();
        if (ToggleButton.isSelected()) {
            // Play the new music based on the selected item
            String filePath = "src/bgmusic/" + selectedMusic + ".wav";
            player.play(filePath);
        } else {
            // Show a message to the user indicating they need to turn on the background music
            JOptionPane.showMessageDialog(this, "Please turn on background music first.", "Music Off", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    }//GEN-LAST:event_bgm_choicesActionPerformed
    

private void playSelectedMusic() {
    String selectedMusic = (String) bgm_choices.getSelectedItem();
    if (selectedMusic.equals("Choose one")) {
        // If "Choose one" is selected, stop the playback and return
        player.stop();
        return;
    }

    // Construct the file path based on the selected music
    String filePath = "src/bgmusic/" + selectedMusic.replace("-", "_") + ".wav";

    // Play the selected music
    player.play(filePath);

} 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(background_music.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(background_music.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(background_music.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(background_music.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new background_music().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton ToggleButton;
    private javax.swing.JLabel bg;
    private javax.swing.JComboBox<String> bgm_choices;
    private javax.swing.JLabel bgmusic_bg;
    private javax.swing.JLabel bgmusic_lbl;
    private javax.swing.JLabel max;
    private javax.swing.JLabel min;
    private javax.swing.JLabel short_descrip1;
    private javax.swing.JLabel short_descrip2;
    private javax.swing.JSlider volume_adj;
    // End of variables declaration//GEN-END:variables
}
