/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.view;

import appdevgrp6.EntityManagerFactoryUtil;
import com.model.Sessions;
import com.model.Users;
import java.awt.CardLayout;
import java.awt.Font;
import java.awt.FontFormatException;
import java.io.IOException;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class profile extends javax.swing.JFrame {

    /**
     * Creates new form settings
     */
    CardLayout cardLayout;
    public profile() {
        initComponents();
        
        //declare card
        cardLayout = (CardLayout)(profile_crdlyt.getLayout());
        // code for swapping cardLayout.show(profile_crdlyt, "dispcard");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        profile_crdlyt = new javax.swing.JPanel();
        display_info = new javax.swing.JPanel();
        unlbl = new javax.swing.JLabel();
        username = new javax.swing.JLabel();
        pwlbl = new javax.swing.JLabel();
        password = new javax.swing.JLabel();
        logout = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        edit_info = new javax.swing.JPanel();
        unlbl1 = new javax.swing.JLabel();
        un_input = new javax.swing.JTextField();
        pwlbl1 = new javax.swing.JLabel();
        pw_input = new javax.swing.JPasswordField();
        discard = new javax.swing.JButton();
        save = new javax.swing.JButton();
        settings_label = new javax.swing.JLabel();
        profile_bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Profile");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        profile_crdlyt.setOpaque(false);
        profile_crdlyt.setLayout(new java.awt.CardLayout());

        display_info.setBackground(new java.awt.Color(255, 255, 255));
        display_info.setOpaque(false);
        display_info.setLayout(new java.awt.GridLayout(4, 2, 1, 0));

        unlbl.setText("Username:");
        display_info.add(unlbl);

        username.setText("placeholder");
        display_info.add(username);

        pwlbl.setText("Password:");
        display_info.add(pwlbl);

        password.setText("placeholder");
        display_info.add(password);

        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logout_btn.png"))); // NOI18N
        logout.setBorder(null);
        logout.setBorderPainted(false);
        logout.setContentAreaFilled(false);
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        display_info.add(logout);

        edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edit_btn.png"))); // NOI18N
        edit.setBorder(null);
        edit.setBorderPainted(false);
        edit.setContentAreaFilled(false);
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        display_info.add(edit);

        profile_crdlyt.add(display_info, "dispcard");

        edit_info.setBackground(new java.awt.Color(255, 255, 255));
        edit_info.setOpaque(false);
        edit_info.setLayout(new java.awt.GridLayout(4, 2, 1, 2));

        unlbl1.setText("Username:");
        edit_info.add(unlbl1);

        un_input.setText("placeholder");
        edit_info.add(un_input);

        pwlbl1.setText("Password:");
        edit_info.add(pwlbl1);

        pw_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pw_inputActionPerformed(evt);
            }
        });
        edit_info.add(pw_input);

        discard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/discard_btn.png"))); // NOI18N
        discard.setBorder(null);
        discard.setBorderPainted(false);
        discard.setContentAreaFilled(false);
        discard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardActionPerformed(evt);
            }
        });
        edit_info.add(discard);

        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/save_btn.png"))); // NOI18N
        save.setBorder(null);
        save.setBorderPainted(false);
        save.setContentAreaFilled(false);
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        edit_info.add(save);

        profile_crdlyt.add(edit_info, "editcard");

        getContentPane().add(profile_crdlyt, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 280, 230));

        settings_label.setText("SETTINGS");
        getContentPane().add(settings_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 200, 60));

        profile_bg.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        profile_bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/profbg.png"))); // NOI18N
        getContentPane().add(profile_bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        try {
            //declaring font
            Font fnblack = Font.createFont(Font.TRUETYPE_FONT, getClass().getResourceAsStream("/font/Poppins-Black.ttf"));
            Font fnsemibold = Font.createFont(Font.TRUETYPE_FONT, getClass().getResourceAsStream("/font/Poppins-SemiBold.ttf"));
            Font fnregular = Font.createFont(Font.TRUETYPE_FONT, getClass().getResourceAsStream("/font/Poppins-Regular.ttf"));
            //setting font
            fnblack = fnblack.deriveFont(Font.PLAIN, 40);
            fnsemibold = fnsemibold.deriveFont(Font.PLAIN, 20);
            fnregular = fnregular.deriveFont(Font.PLAIN, 15);
           
            //black
            settings_label.setFont(fnblack);
            
            //semibold
            
            //display card
            unlbl.setFont(fnsemibold);
            pwlbl.setFont(fnsemibold);
            //edit card
            unlbl1.setFont(fnsemibold);
            pwlbl1.setFont(fnsemibold);

            //display card
            username.setFont(fnregular);
            password.setFont(fnregular);
            
            //edit card
            un_input.setFont(fnregular);
            pw_input.setFont(fnregular);

        // Fetch the highest sessionID in the Sessions table where isLoggedIn is set to 1 (logged in).
        EntityManagerFactory emf = EntityManagerFactoryUtil.getEntityManagerFactory();
        EntityManager em = emf.createEntityManager();
        TypedQuery<Integer> query = em.createQuery("SELECT MAX(s.sessionID) FROM Sessions s WHERE s.isLoggedIn = :isLoggedIn", Integer.class);
        query.setParameter("isLoggedIn", (short) 1);

        Integer highestSessionID = query.getSingleResult();

        // Retrieve the associated userID from the fetched session record.
        if (highestSessionID != null) {
            Sessions session = em.find(Sessions.class, highestSessionID);
            if (session != null) {
                Users user = session.getUserID();
                if (user != null) {
                    // Set the username and password obtained from the Users table on their labels.
                    username.setText(user.getUsername());
                    password.setText("*****");
                    un_input.setText(user.getUsername());
                    pw_input.setText(user.getPassword());
                }
            }
        }        
            
        } catch (FontFormatException | IOException e) {
            JOptionPane.showMessageDialog(null, e);
        } 
    }//GEN-LAST:event_formWindowOpened

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
    // TODO add your handling code here:

    // Fetch the highest sessionID in the Sessions table where isLoggedIn is set to 1 (logged in).
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("APPDEVGRP6PU");
    EntityManager em = emf.createEntityManager();
    TypedQuery<Integer> query = em.createQuery("SELECT MAX(s.sessionID) FROM Sessions s WHERE s.isLoggedIn = :isLoggedIn", Integer.class);
    query.setParameter("isLoggedIn", (short) 1);

    Integer highestSessionID = query.getSingleResult();

    // Retrieve the associated userID from the fetched session record.
    if (highestSessionID != null) {
        Sessions session = em.find(Sessions.class, highestSessionID);
        if (session != null) {
            Users user = session.getUserID();
            if (user != null) {
                // Get the new username and password from the input fields.
                String newUsername = un_input.getText();
                String newPassword = pw_input.getText();

                // Check if there are any changes to the username and password.
                if (!newUsername.equals(user.getUsername()) || !newPassword.equals(user.getPassword())) {

                    // Update the user's credentials in the Users table.
                    em.getTransaction().begin();
                    user.setUsername(newUsername);
                    user.setPassword(newPassword);
                    em.getTransaction().commit();

                    // Display a message to inform the user that the update was successful.
                    JOptionPane.showMessageDialog(this, "Username and Password Edited successfully!", "Edit", JOptionPane.INFORMATION_MESSAGE);
                    username.setText(user.getUsername());
                    password.setText("*****");
                    cardLayout.show(profile_crdlyt, "dispcard");
                } else {
                    // Display a message to inform the user that nothing has been changed.
                    JOptionPane.showMessageDialog(this, "No changes has been made.", "No Changes", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }

    em.close();
    emf.close();
    }//GEN-LAST:event_saveActionPerformed

    private void discardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardActionPerformed
        // TODO add your handling code here:
        cardLayout.show(profile_crdlyt, "dispcard");
    }//GEN-LAST:event_discardActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
    // TODO add your handling code here:


    
    // Get the EntityManagerFactory
    EntityManagerFactory emf = EntityManagerFactoryUtil.getEntityManagerFactory();

    // Create the EntityManager
    EntityManager em = emf.createEntityManager();

    // Find the highest sessionID in the Sessions table (assumed to be associated with the logged-in user)
    TypedQuery<Integer> query = em.createQuery("SELECT MAX(s.sessionID) FROM Sessions s WHERE s.isLoggedIn = :isLoggedIn", Integer.class);
    query.setParameter("isLoggedIn", (short) 1);

    Integer highestSessionID = query.getSingleResult();

    if (highestSessionID != null) {
        // Find the session associated with the highest sessionID
        Sessions session = em.find(Sessions.class, highestSessionID);

        if (session != null) {
            // Update the session status to indicate that the user is logged out
            em.getTransaction().begin();
            session.setIsLoggedIn((short) 0);
            em.getTransaction().commit();
        }
    }

    // Close the EntityManager and EntityManagerFactory
    em.close();
    emf.close();

    // For example, you can display a message dialog to inform the user that they have been logged out.
    JOptionPane.showMessageDialog(this, "Logged out successfully!", "Logout", JOptionPane.INFORMATION_MESSAGE);

    // Close the current window and open the login page
    dispose();
    loginpage lp = new loginpage();
    lp.setVisible(true);
    }//GEN-LAST:event_logoutActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        cardLayout.show(profile_crdlyt, "editcard");
    }//GEN-LAST:event_editActionPerformed

    private void pw_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pw_inputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pw_inputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new profile().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton discard;
    private javax.swing.JPanel display_info;
    private javax.swing.JButton edit;
    private javax.swing.JPanel edit_info;
    private javax.swing.JButton logout;
    private javax.swing.JLabel password;
    private javax.swing.JLabel profile_bg;
    private javax.swing.JPanel profile_crdlyt;
    private javax.swing.JPasswordField pw_input;
    private javax.swing.JLabel pwlbl;
    private javax.swing.JLabel pwlbl1;
    private javax.swing.JButton save;
    private javax.swing.JLabel settings_label;
    private javax.swing.JTextField un_input;
    private javax.swing.JLabel unlbl;
    private javax.swing.JLabel unlbl1;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables
}
