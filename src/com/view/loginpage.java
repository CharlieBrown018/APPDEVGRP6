/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.view;
import appdevgrp6.EntityManagerFactoryUtil;
import com.model.Sessions;
import com.model.Users;
import java.awt.Color;
import java.awt.Font;
import java.awt.FontFormatException;
import java.io.IOException;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.NoResultException;
import javax.persistence.TypedQuery;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class loginpage extends javax.swing.JFrame {

    /**
     * Creates new form loginpage
     */
    public loginpage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        signup = new javax.swing.JLabel();
        login = new javax.swing.JButton();
        pw_txtfield = new javax.swing.JPasswordField();
        un_txtfield = new javax.swing.JTextField();
        password = new javax.swing.JLabel();
        username = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 700));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        signup.setText("Sign Up");
        signup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                signupMouseClicked(evt);
            }
        });
        getContentPane().add(signup, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 550, 190, 40));

        login.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/button_components.png"))); // NOI18N
        login.setBorder(null);
        login.setContentAreaFilled(false);
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });
        getContentPane().add(login, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 530, 150, 80));

        pw_txtfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pw_txtfieldActionPerformed(evt);
            }
        });
        getContentPane().add(pw_txtfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 460, 820, 60));

        un_txtfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                un_txtfieldActionPerformed(evt);
            }
        });
        getContentPane().add(un_txtfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 320, 820, 60));

        password.setText("Password");
        getContentPane().add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 400, 230, 60));

        username.setText("Username");
        getContentPane().add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, 210, 70));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/login.png"))); // NOI18N
        background.setOpaque(true);
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void un_txtfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_un_txtfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_un_txtfieldActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:

        try {
            Font fnbold = Font.createFont(Font.TRUETYPE_FONT, getClass().getResourceAsStream("/font/Poppins-Bold.ttf"));
            Font fnregular = Font.createFont(Font.TRUETYPE_FONT, getClass().getResourceAsStream("/font/Poppins-Regular.ttf"));
            fnbold = fnbold.deriveFont(Font.PLAIN, 30);
            fnregular = fnregular.deriveFont(Font.PLAIN, 30);
            username.setFont(fnbold);
            password.setFont(fnbold);
            signup.setFont(fnregular);
            signup.setForeground(Color.BLUE);
            un_txtfield.setFont(fnregular);
            pw_txtfield.setFont(fnregular);
        } catch (FontFormatException | IOException e) {
            JOptionPane.showMessageDialog(null, e);
        } 
    }//GEN-LAST:event_formWindowOpened

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
    // TODO add your handling code here:
    String enteredUsername = un_txtfield.getText();
    String enteredPassword = pw_txtfield.getText();

    // Validate that both fields are filled
    if (enteredUsername.isEmpty() || enteredPassword.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Both username and password must be filled!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Fetch the user details from the database based on the entered username
    EntityManagerFactory emf = EntityManagerFactoryUtil.getEntityManagerFactory();
    EntityManager em = emf.createEntityManager();
    TypedQuery<Users> query = em.createQuery("SELECT u FROM Users u WHERE u.username = :username", Users.class);
    query.setParameter("username", enteredUsername);

    Users user = null;
    try {
        user = query.getSingleResult();
    } catch (NoResultException e) {
        // User not found in the database
    }
    em.getTransaction().begin();

    // Check if the user was found and if the entered password matches the stored password
    if (user == null || !user.getPassword().equals(enteredPassword)) {

        JOptionPane.showMessageDialog(this, "Invalid username or password!", "Error", JOptionPane.ERROR_MESSAGE);
    } else {
        // Login successful

        JOptionPane.showMessageDialog(this, "Login successful!", "Success", JOptionPane.INFORMATION_MESSAGE);

        Sessions session = new Sessions();
        session.setUserID(user);
        session.setIsLoggedIn((short) 1);

        em.persist(session);
        em.getTransaction().commit();
        dispose();
        // Call the launchJavaFXApp method to start the JavaFX UI
        JavaFXAppLauncher.launchJavaFXApp(new String[0]);
    }

    em.close();
    }//GEN-LAST:event_loginActionPerformed

    private void signupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signupMouseClicked
        // TODO add your handling code here:
        dispose();
        signuppage sn = new signuppage();
        sn.setVisible(true);

    }//GEN-LAST:event_signupMouseClicked

    private void pw_txtfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pw_txtfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pw_txtfieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(loginpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(loginpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(loginpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(loginpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new loginpage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton login;
    private javax.swing.JLabel password;
    private javax.swing.JPasswordField pw_txtfield;
    private javax.swing.JLabel signup;
    private javax.swing.JTextField un_txtfield;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables
}
